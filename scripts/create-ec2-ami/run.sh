#!/bin/bash -e
################################################################
#
#  Name: Run
#  GitHub repository: https://github.com/2ndSightLab/aws-scripts
#  File: scripts/create-ec2-ami/run.sh
#  Copyright: Â© 2025 2nd Sight Lab, LLC
# 
#  AWS automation script
# 
#  This software, which includes components generated with the assistance of artificial
#  intelligence, is free for personal, educational, and non-profit use, provided that
#  the included copyright notice is retained in all copies or substantial portions of
#  the software. This license, however, does not grant permission for any commercial
#  use, which requires obtaining a separate commercial license from the author. The
#  software is provided "as is," without any warranty, and the author cannot be held
#  liable for any damages or claims arising from its use. By using this software,
#  all users acknowledge that any potentially uncopyrightable portions generated by
#  AI are governed by the terms of this license as part of the overall work.
# 
################################################################


# Check if INSTANCE_ID is already set
if [ -z "$INSTANCE_ID" ]; then
    echo "Do you want to deploy a new EC2 instance to create an AMI? (y/n):"
    read DEPLOY_NEW
    if [ "$DEPLOY_NEW" = "y" ]; then
        # Source the deploy-ec2-instance script
        SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        source "$SCRIPT_DIR/../deploy-ec2-instance/run.sh"
    else
        while [ -z "$INSTANCE_ID" ]; do
            echo "Enter instance ID:"
            read INSTANCE_ID
            if [ -z "$INSTANCE_ID" ]; then
                echo "ERROR: Instance ID cannot be empty."
            fi
        done
    fi
fi

echo "Stopping the instance..."
aws ec2 stop-instances --instance-ids "$INSTANCE_ID" --region "$REGION" --profile "$PROFILE"

echo "Waiting for instance to stop..."
aws ec2 wait instance-stopped --instance-ids "$INSTANCE_ID" --region "$REGION" --profile "$PROFILE"

echo "Creating AMI: $AMI_NAME"
NEW_AMI=$(aws ec2 create-image \
    --instance-id "$INSTANCE_ID" \
    --name "$AMI_NAME" \
    --description "AMI created from instance $INSTANCE_ID" \
    --tag-specifications "ResourceType=image,Tags=[{Key=Name,Value=$AMI_NAME}]" \
    --region "$REGION" \
    --profile "$PROFILE" \
    --query 'ImageId' \
    --output text)

echo "AMI created: $NEW_AMI"
