#!/bin/bash -e
################################################################
#
#  Name: Colors_vim
#  GitHub repository: https://github.com/2ndSightLab/aws-scripts
#  File: scripts/deploy-ec2-instance/user_data_scripts/colors_vim.sh
#  Copyright: Â© 2025 2nd Sight Lab, LLC
# 
#  AWS automation script
# 
#  This software, which includes components generated with the assistance of artificial
#  intelligence, is free for personal, educational, and non-profit use, provided that
#  the included copyright notice is retained in all copies or substantial portions of
#  the software. This license, however, does not grant permission for any commercial
#  use, which requires obtaining a separate commercial license from the author. The
#  software is provided "as is," without any warranty, and the author cannot be held
#  liable for any damages or claims arising from its use. By using this software,
#  all users acknowledge that any potentially uncopyrightable portions generated by
#  AI are governed by the terms of this license as part of the overall work.
# 
################################################################

EC2_USER="ec2-user"
VIMRC_FILE="/home/$EC2_USER/.vimrc"

if sudo [ -f "$VIMRC_FILE" ]; then
  echo "The .vimrc file for $EC2_USER already exists. Exiting script."
  exit 0
fi

sudo -u ec2-user bash << 'EOF'
THIS_DIR=$(pwd)

cd /home/ec2-user
echo 'colo tr' > ~/.vimrc

OUTPUT_FILE="tr.vim"
if [ ! -d ~/.vim ]; then mkdir ~/.vim; fi
if [ ! -d ~/.vim/colors ]; then mkdir ~/.vim/colors; fi
if [ ! -f ~/.vim/colors/$OUTPUT_FILE ]; then touch ~/.vim/colors/$OUTPUT_FILE; fi
cd ~/.vim/colors
EOF

OUTPUT_FILE="/home/ec2-user/.vim/colors/tr.vim"

cat > "$OUTPUT_FILE" << 'EOF'
" Howto: https://medium.com/cloud-security/changing-vim-colors-and-risks-in-vim-colors-files-from-the-internet-b0276a0fc38e
" Groupnames: https://vimdoc.sourceforge.net/htmldoc/syntax.html#group-name
hi Normal ctermfg=White
hi Comment ctermfg=LightGrey
hi Constant ctermfg=White
hi String ctermfg=White
hi Character ctermfg=White
hi Number ctermfg=White
hi Boolean ctermfg=White
hi Identifier ctermfg=White
hi Function ctermfg=White
hi Statement ctermfg=White
hi Conditional ctermfg=White
hi Repeat ctermfg=White
hi Label ctermfg=White
hi Operator ctermfg=White
hi Keyword ctermfg=White
hi Exception ctermfg=White
hi Preproc ctermfg=White
hi Include ctermfg=White
hi Define ctermfg=White
hi Macro ctermfg=White
hi PreCondit ctermfg=White
hi Type ctermfg=White
hi StorageClass ctermfg=White
hi Structure ctermfg=White
hi Typedef ctermfg=White
hi Special ctermfg=White
hi SpecialChar ctermfg=White
hi Tag ctermfg=White
hi Delimiter ctermfg=White
hi SpecialComment ctermfg=White
hi Debug ctermfg=White
hi Underlined ctermfg=White
hi Ignore ctermfg=White
hi Error ctermfg=Yellow
hi ToDo ctermfg=LightGrey
EOF
