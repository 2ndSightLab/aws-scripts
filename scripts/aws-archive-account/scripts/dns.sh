#!/bin/bash -e
################################################################
#
#  Name: Archive DNS
#  GitHub repository: https://github.com/2ndSightLab/aws-scripts
#  File: dns.sh
#  Copyright: Â© 2025 2nd Sight Lab, LLC
# 
#  Archive DNS resources
# 
#  This software, which includes components generated with the assistance of artificial
#  intelligence, is free for personal, educational, and non-profit use, provided that
#  the included copyright notice is retained in all copies or substantial portions of
#  the software. This license, however, does not grant permission for any commercial
#  use, which requires obtaining a separate commercial license from the author. The
#  software is provided "as is," without any warranty, and the author cannot be held
#  liable for any damages or claims arising from its use. By using this software,
#  all users acknowledge that any potentially uncopyrightable portions generated by
#  AI are governed by the terms of this license as part of the overall work.
# 
################################################################


cat <<'END_TEXT'

***************************
DNS
***************************
END_TEXT

read -p "Do you want to copy any DNS (Route 53) records? " COPY
if [ "$COPY" == "y" ]; then 

cat <<'END_TEXT'

This is a manual step because DNS records can be
configured in different ways for different purposes
Check DNS records associated with:

  * EC2 instances (such as for a TLS certificate associated with RDP or test webapps)"
  * Email addresses
  * Lambda functions
  * ALBs, ELBs, NLBs
  * CloudFront or some other CDN
  * Any other place you used a custom domain name

Record how you used the domain name in parameter store or secrest manager.
If you are done with the DNS record terminate it so it can no be used
via subdomain takeover.

Domain names and hosted zones are listed below.

END_TEXT

echo "Domain names:"
echo ""
aws route53domains list-domains --region us-east-1 --output text --query "Domains[*].DomainName" \
  --profile $archive_from --region us-east-1
echo ""
echo "Hosted Zones:"
echo ""
aws route53 list-hosted-zones --query "HostedZones[*].[Id, Name]" --output text \
  --profile $ARCHIVE_FROM --region us-east-1
echo ""
read -p "Enter to continue. Ctrl-C to exit." OK

fi #end if copy
copy=""
