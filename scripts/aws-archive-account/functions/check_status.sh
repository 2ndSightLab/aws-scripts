#!/bin/bash -e
################################################################
#
#  Name: Check_status
#  GitHub repository: https://github.com/2ndSightLab/aws-scripts
#  File: scripts/aws-archive-account/functions/check_status.sh
#  Copyright: Â© 2025 2nd Sight Lab, LLC
# 
#  AWS automation script
# 
#  This software, which includes components generated with the assistance of artificial
#  intelligence, is free for personal, educational, and non-profit use, provided that
#  the included copyright notice is retained in all copies or substantial portions of
#  the software. This license, however, does not grant permission for any commercial
#  use, which requires obtaining a separate commercial license from the author. The
#  software is provided "as is," without any warranty, and the author cannot be held
#  liable for any damages or claims arising from its use. By using this software,
#  all users acknowledge that any potentially uncopyrightable portions generated by
#  AI are governed by the terms of this license as part of the overall work.
# 
################################################################



check_status(){
    local instance_id="$1"
    local archive_to="$2"
    local region="$3"

    local COUNT=0
    local MAX_ATTEMPTS=60

    if [[ "$instance_id" != i-* ]]; then
      echo "Invalid instance ID: $instance_id"
      exit
    fi

    while true; do 

        if [ "$COUNT" -ge "$MAX_ATTEMPTS" ]; then
           echo "Error: Maximum attempts $MAX_ATTEMPTS reached. Instance not available or terminated."
           exit 1
        fi

        ((COUNT++))

        local STATE=$(aws ec2 describe-instance-status \
        --instance-ids "$instance_id" \
        --include-all-instances \
        --query '[InstanceStatuses[0].InstanceState.Name, InstanceStatuses[0].InstanceStatus.Status]' \
        --output text \
        --region "$region" \
        --profile "$archive_to" \
        --color off)

        read -r STATE STATUS <<< "$STATE"

        if [ "$STATE" == "terminated" ]; then
            echo "Instance started then terminated."
            echo "Does the profile $archive_to have permission to use key: $kms_key?"
            exit 1
        fi
 
        if [ "$STATE" == "running" ] && [ "$STATUS" == "ok" ]; then
          echo $instance_id
          break
        fi
                
        sleep 5
    done
}
