#!/bin/bash -e
################################################################
#
#  Name: Wait For AMI
#  GitHub repository: https://github.com/2ndSightLab
#  File: wait_for_ami.sh
#  Copyright: Â© 2025 2nd Sight Lab, LLC
# 
#  Wait for AMI to become available
# 
#  This software, which includes components generated with the assistance of artificial
#  intelligence, is free for personal, educational, and non-profit use, provided that
#  the included copyright notice is retained in all copies or substantial portions of
#  the software. This license, however, does not grant permission for any commercial
#  use, which requires obtaining a separate commercial license from the author. The
#  software is provided "as is," without any warranty, and the author cannot be held
#  liable for any damages or claims arising from its use. By using this software,
#  all users acknowledge that any potentially uncopyrightable portions generated by
#  AI are governed by the terms of this license as part of the overall work.
# 
################################################################

wait_for_ami(){
  local AMI_ID="$1"  

  local MAX_ATTEMPTS=240
  local DELAY=15 
  local AMI_STATE=""

  echo "Waiting for AMI $AMI_ID to become available."

  local ATTEMPT=0
  while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do

    AMI_STATE=$(aws ec2 describe-images \
    --image-ids "$AMI_ID" \
    --query 'Images[0].State' \
    --output text \
    --profile $archive_to \
    --region $region \
    --color off)

    if [ $? -eq 0 ] && [ "$AMI_STATE" == "available" ]; then
      echo $AMI_ID
      return 0
    fi

    if [ "$AMI_STATE" == "failed" ]; then
      echo "Error: AMI $AMI_ID id in failed state. Exit."
      exit 1
    fi

    sleep $DELAY

    ATTEMPT=$((ATTEMPT+1))

  done

  echo "Error: Max attempts exceeded for AMI $AMI_ID. Timed out."
  local wait_more="y"
  while [ "wait_more" != "n" ]; do
    read -p "Do you want to continue waiting? (y/n)" wait_more
    if [ "$wait_more" == "y" ]; then
      wait_for_ami $AMI_ID
      wait_for_ami="n"
    fi
  done
}
