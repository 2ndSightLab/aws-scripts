#!/bin/bash -e
################################################################
#
#  Name: Add Rust Banner
#  GitHub repository: https://github.com/2ndSightLab/aws-scripts
#  File: functions/add_rust_banner.sh
#  Copyright: © 2025 2nd Sight Lab, LLC
# 
#  Add banner to rust script files
# 
#  This software, which includes components generated with the assistance of artificial
#  intelligence, is free for personal, educational, and non-profit use, provided that
#  the included copyright notice is retained in all copies or substantial portions of
#  the software. This license, however, does not grant permission for any commercial
#  use, which requires obtaining a separate commercial license from the author. The
#  software is provided "as is," without any warranty, and the author cannot be held
#  liable for any damages or claims arising from its use. By using this software,
#  all users acknowledge that any potentially uncopyrightable portions generated by
#  AI are governed by the terms of this license as part of the overall work.
# 
################################################################

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

add_rust_banner() {
    local file="$1"
    local name="$2"
    local description="$3"
    
    # Check arguments
    if [ -z "$file" ] || [ -z "$name" ] || [ -z "$description" ]; then
        echo "Error: Missing required arguments"
        echo "Usage: add_rust_banner <file> <name> <description>"
        return 1
    fi
    
    # Check if file exists
    if [ ! -f "$file" ]; then
        echo "Error: File $file does not exist"
        return 1
    fi
    
    # Check if banner already exists and is current (look for "Name:" format)
    if head -30 "$file" | grep -q "^////////////////////////////////////////////////////////////////$" && head -30 "$file" | grep -q "//  Name:" && head -30 "$file" | grep -q "scripts/"; then
        echo "Current banner already exists in $file, skipping"
        return 0
    fi
    
    # Always preserve ALL existing content
    if head -30 "$file" | grep -q "^////////////////////////////////////////////////////////////////$"; then
        echo "Updating banner in $file"
        # Find line number where banner ends and preserve everything after it
        local banner_end=$(grep -n "^////////////////////////////////////////////////////////////////$" "$file" | tail -1 | cut -d: -f1)
        tail -n +$((banner_end + 1)) "$file" > "/tmp/content_$(basename "$file")"
    else
        echo "Adding banner to $file"
        # No banner exists, preserve all content (no shebang handling for Rust)
        cat "$file" > "/tmp/content_$(basename "$file")"
    fi
    
    # Create temp file with banner
    local temp_file="/tmp/banner_$(basename "$file")"
    
    local name_line="//  Name: $name"
    
    # Get git root and relative path
    local git_root=$(git -C "$(dirname "$file")" rev-parse --show-toplevel)
    local absolute_file=$(realpath "$file")
    local relative_path=${absolute_file#$git_root/}
    
    # Get repository URL from git
    local repo_url=$(git -C "$(dirname "$file")" config --get remote.origin.url 2>/dev/null || echo "https://github.com/2ndSightLab/aws-scripts")
    
    # Get current year
    local current_year=$(date +%Y)
    
    cat > "$temp_file" << EOF
////////////////////////////////////////////////////////////////
//
$name_line
//  GitHub repository: $repo_url
//  File: $relative_path
//  Copyright: © $current_year 2nd Sight Lab, LLC
// 
//  $description
// 
//  This software, which includes components generated with the assistance of artificial
//  intelligence, is free for personal, educational, and non-profit use, provided that
//  the included copyright notice is retained in all copies or substantial portions of
//  the software. This license, however, does not grant permission for any commercial
//  use, which requires obtaining a separate commercial license from the author. The
//  software is provided "as is," without any warranty, and the author cannot be held
//  liable for any damages or claims arising from its use. By using this software,
//  all users acknowledge that any potentially uncopyrightable portions generated by
//  AI are governed by the terms of this license as part of the overall work.
// 
////////////////////////////////////////////////////////////////

EOF
    
    # Add existing content
    cat "/tmp/content_$(basename "$file")" >> "$temp_file"
    
    # Replace original file (no chmod +x for Rust files)
    mv "$temp_file" "$file"
    rm "/tmp/content_$(basename "$file")"
}
